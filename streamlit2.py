# -*- coding: utf-8 -*-
"""streamlit2

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1shO92uUQrrLOIZ5jRJSjmyTY4Ah8rROx
"""

import warnings
warnings.filterwarnings('ignore')

import streamlit as st
import pandas as pd
import altair as alt

st.title("Hello World")
st.write("Welcome to Prediksi Penjualan Komputer dengan SVM")

df = pd.read_csv('SuperStore_Sales_Dataset.csv')
df_rename = df.rename(columns={'Row ID+O6G3A1:R6': 'Row ID'})
df_tech = df_rename[df_rename['Category'] == 'Technology']
df_com = df_tech[df_tech['Sub-Category'] != 'Phones']
st.write(df_com)

base = alt.Chart(df_com).properties(
    title='Distribution of Profit'
)

histogram = base.mark_bar().encode(
    # Binning data di sumbu X
    x=alt.X('Profit', bin=True, title='Profit'),
    
    # Menghitung frekuensi data di sumbu Y (default aggregation count)
    y=alt.Y('count()', title='Frequency'),
    
    # Tooltip untuk interaktivitas
    tooltip=[alt.Tooltip('Profit', bin=True), 'count()']
).properties(
    width=600,
    height=400
)

# 2b. Opsi: Menambahkan KDE/Density Curve (sebagai garis) - Opsional, lebih rumit di Altair
# Untuk membuat KDE murni, Altair memerlukan transformasi density eksplisit 
# atau library tambahan, tetapi untuk visualisasi distribusi dasar, histogram sudah cukup.

# --- 3. Menampilkan Grafik di Streamlit ---
st.altair_chart(histogram, use_container_width=True)
